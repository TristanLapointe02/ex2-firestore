{"version":3,"sources":["composants/SommairePanier.jsx","composants/Entete.jsx","composants/BtnAjoutPanier.jsx","composants/Produit.jsx","data/firebase.js","composants/ListeProduits.jsx","composants/Accueil.jsx","composants/Apropos.jsx","composants/Contact.jsx","composants/PiedDePage.jsx","composants/Appli.jsx","index.jsx"],"names":["SommairePanier","info","articles","nbArticles","totalItems","st","tps","tvq","total","length","reduce","acc","article","qte","prix","toFixed","retournerInfoPanier","className","Entete","etatPanier","panier","Object","values","useState","afficherSommaire","setAfficherSommaire","to","activeClassName","Badge","onClick","badgeContent","accumulateur","eltCourant","color","BtnAjoutPanier","texte","classeCss","Produit","id","nom","image","setPanier","src","alt","fbAppli","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","bd","firestore","ListeProduits","props","produits","setProduits","useEffect","tabProduits","collection","get","then","reponse","forEach","prod","push","data","map","produit","Accueil","Apropos","Contact","annee","Date","getFullYear","PiedDePage","Appli","window","localStorage","getItem","JSON","parse","setItem","stringify","path","component","exact","baseName","location","href","search","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.702325a2.chunk.js","sourcesContent":["import './SommairePanier.scss';\r\n\r\nexport default function SommairePanier({articles}) {\r\n  // On utiliser une fonction utilitaire pour faire le calcul de l'info requise dans le sommaire\r\n  const info = retournerInfoPanier(articles);\r\n\r\n  return(\r\n    <div className=\"SommairePanier\">\r\n      <span>Articles différents : {info.nbArticles}</span>\r\n      <span>Total # items : {info.totalItems}</span>\r\n      <span>Sous-total : {info.st}</span>\r\n      <span>TPS : {info.tps}</span>\r\n      <span>TVQ : {info.tvq}</span>\r\n      <span>Total : {info.total}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction retournerInfoPanier(articles) {\r\n  // le tableau des articles du panier ressemle à ça :\r\n  // [ {nom: 'sdfsd', prix: 15.99, qte: 2}, {nom: 'sdfsd', prix: 9.99, qte: 6}, {nom: 'sdfsd', prix: 23.67, qte: 15}]\r\n  let info = {nbArticles: 0, totalItems: 0, st: 0, tps: 0, tvq: 0, total: 0};\r\n  info.nbArticles = articles.length;\r\n  info.totalItems = articles.reduce((acc, article) => acc + article.qte , 0);\r\n  const st = articles.reduce((acc, article) => acc + (article.prix*article.qte), 0);\r\n  info.st = st.toFixed(2); // Attention : toFixed() transforme le nombre en chaîne de caractères\r\n  const tps = st * 0.05;\r\n  info.tps = tps.toFixed(2)\r\n  const tvq = st * 0.09975;\r\n  info.tvq = tvq.toFixed(2);\r\n  info.total = (st + tps + tvq).toFixed(2);\r\n  return info;\r\n}","import './Entete.scss';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport SommairePanier from './SommairePanier';\r\nimport { useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport default function Entete({etatPanier}) {\r\n  // Nous avons besoin uniquement de la variable d'état, et pas du mutateur (setPanier)\r\n  const [panier] = etatPanier;\r\n  \r\n  // On extrait le tableau des valeurs de l'objet 'panier' \r\n  // (cette variable est utilisée pour afficher le nombre d'articles dans le badge sur l'icône du panier)\r\n  const articles = Object.values(panier);\r\n\r\n  // État d'affichage du sommaire (un 'toggle' : donc true ou false fonctionne bien ici)\r\n  const [afficherSommaire, setAfficherSommaire] = useState(false);\r\n\r\n  return (\r\n    <header className=\"Entete\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\">\r\n          Magasin\r\n        </Link>\r\n      </div>\r\n      <ul className=\"navPrincipale\">\r\n        <li><NavLink to=\"/nos-produits\" activeClassName=\"navActive\">Produits</NavLink></li>\r\n        <li><NavLink to=\"/a-propos-de-nous\" activeClassName=\"navActive\">À propos de nous</NavLink></li>\r\n        <li><NavLink to=\"/contactez-nous\" activeClassName=\"navActive\">Contactez-nous</NavLink></li>\r\n      </ul>\r\n      <ul className=\"navUtilisateur\">\r\n        <li>\r\n          <Badge onClick={() => setAfficherSommaire(!afficherSommaire)} badgeContent={articles.reduce((accumulateur, eltCourant) => accumulateur + eltCourant.qte, 0)} color=\"secondary\">\r\n            <ShoppingCartIcon />\r\n          </Badge>\r\n          { afficherSommaire && \r\n            <SommairePanier articles={articles} />\r\n          }\r\n        </li>\r\n        <li>Mon compte</li>\r\n      </ul>\r\n    </header>\r\n  )\r\n}","import { Badge } from '@material-ui/core';\r\n\r\nimport './BtnAjoutPanier.scss';\r\n\r\nexport default function BtnAjoutPanier({onClick, qte, texte, classeCss}) {\r\n  return (\r\n    <Badge badgeContent={qte} color=\"primary\">\r\n      <button onClick={onClick} className={`BtnAjoutPanier ${classeCss}`}>\r\n        {texte}\r\n      </button>\r\n    </Badge>\r\n  );\r\n} \r\n\r\n","import BtnAjoutPanier from './BtnAjoutPanier';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport './Produit.scss';\r\n\r\nexport default function Produit({etatPanier, id, nom, prix, image}) {\r\n  const [panier, setPanier] = etatPanier;\r\n\r\n  /**\r\n   * Ajouter un article au panier (en faisant la mutation de l'état)\r\n   */\r\n  function ajouterPanier() {\r\n    if(panier[id]) {\r\n      // panier[id].qte++; // Ancien code : pas une bonne pratique : il ne faut pas modifier la variable d'état\r\n      setPanier({...panier, [id]:{...panier[id], qte: panier[id].qte + 1}});\r\n    }\r\n    else {\r\n      // panier[id] = {nom: nom, prix: prix, qte: 1} // Idem comme ci-dessus\r\n      setPanier({...panier, [id]:{nom, prix, qte: 1}});\r\n    }\r\n    // On a plus besoin de la ligne suivante puisque setPanier est maintenant utilisée directement ci-dessus\r\n    // setPanier(JSON.parse(JSON.stringify(panier))); // {...panier}\r\n  } \r\n\r\n  // État du bouton (remarquez l'utilisation de la décomposition de tableau)\r\n  let [qte, texte, classeCss]  = \r\n        panier[id] \r\n          ? [panier[id].qte, <AddCircleOutlineIcon />, \"rouge\"] \r\n          : [0, \"Ajouter au panier\", \"\"];\r\n  \r\n  return(\r\n    <li className=\"Produit\">\r\n      <img src={'images-produits/' + image + '.webp'} alt=\"\"/>\r\n      <div className=\"info\">\r\n        <p className=\"nom\">{nom}</p>\r\n        <p className=\"prix\">{prix}</p>\r\n      </div>\r\n      <BtnAjoutPanier onClick={ajouterPanier} qte={qte} texte={texte} classeCss={classeCss} />\r\n    </li>\r\n  );\r\n}\r\n","import fbAppli from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n/******* Ex#3 - Étape B ********************************/ \r\n// Ajouter votre objet de configuration Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBj5u00ZQj4DGNkngaFJjBidnqHQOz2Clg\",\r\n  authDomain: \"iwra-react.firebaseapp.com\",\r\n  projectId: \"iwra-react\",\r\n  storageBucket: \"iwra-react.appspot.com\",\r\n  messagingSenderId: \"914527943765\",\r\n  appId: \"1:914527943765:web:59cf81b461c88e28d968dc\"\r\n};\r\n\r\n// Initialiser Firebase\r\nif(!fbAppli.apps.length) {\r\n  fbAppli.initializeApp(firebaseConfig);\r\n}\r\n\r\n// Initialiser Firestore\r\nconst bd = fbAppli.firestore();\r\n\r\n/******* Ex#3 - Étape C ********************************/ \r\n// Exporter (par défaut) ci-dessous la référence à \"bd\" obtenue ci-dessus (pour pouvoir l'utiliser dans le composant ListeProduits)\r\n\r\nexport default bd;","import './ListeProduits.scss';\r\nimport Produit from \"./Produit\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n/******* Ex#3 - Étape D ********************************/ \r\n// Importer l'objet bd du fichier firebase.js\r\nimport bd from '../data/firebase';\r\n\r\nexport default function ListeProduits(props) {\r\n  /******* Ex#3 - Étape E ********************************/ \r\n  // Créer un \"état\" React pour les produits (utiliser useState) et décomposer-le pour obtenir des références aux deux éléments de l'état (la variable et la fonction mutateur)\r\n  const [produits, setProduits] = useState([]);\r\n    \r\n  useEffect(() => {\r\n      // On initialise un tableau pour contenir les produits extraits de Firestore\r\n      const tabProduits = [];\r\n      \r\n      /******* Ex#3 - Étape F et G ********************************/ \r\n      // Étape F : Faire une requête à la collection de produits sur Firestore et remplir les tableau tabProduits avec les données de produits retournées par Firestore (ne pas oublier d'ajouter l'identifiant)\r\n      // Étape G : Une fois le tableau tabProduits rempli, modifier l'état des produits (initialisé ci-dessus avec useState) en utilisant le mutateur et le tableau tabProduits\r\n      bd.collection('ex2-produits').get().then(\r\n        reponse => { \r\n          reponse.forEach(prod => tabProduits.push({id: prod.id, ...prod.data()}));\r\n          setProduits(tabProduits);\r\n        }\r\n      )\r\n         \r\n\r\n  }, []); // Ne modifiez surtout pas le tableau des dépendances à gauche : vous risquez un appel récurent sans fin à Firebase !!\r\n\r\n  return (\r\n    <div className=\"ListeProduits\">\r\n      <h2>Produits disponibles</h2>\r\n      <ul>        \r\n        {/*\r\n          ******* Ex#3 - Étape H ******************************** \r\n          Utiliser la variable d'état qui contient les produits pour générer les composants 'Produit' ci-dessous (avec la méthode map()).\r\n          Remarque : Vous pouvez si vous voulez reproduire la solution déjà faite en classe (c'est un trivial copier-coller).\r\n          Attention : les composants Produit s'attendent à recevoir l'état du panier dans leurs 'props', donc vous devez\r\n          avoir l'attribut \"etatPanier={props.etatPanier}\" quand vous les générer ici : encore une fois, regardez \r\n          le code de l'exercice de classe. Vous pouvez aussi regarder le code du composant Produit pour vérifier ce qu'il \r\n          a besoin de recevoir en 'props'.\r\n        */\r\n        \r\n          produits.map( \r\n            produit =>  <li key={produit.id}><Produit etatPanier={props.etatPanier} {...produit} /></li>\r\n          )\r\n        }\r\n        \r\n      </ul>\r\n    </div>\r\n  );\r\n}","export default function Accueil() {\r\n  return (\r\n    <div className=\"Accueil\">\r\n      <h2>Magasin</h2>\r\n      <p>Page d'accueil en construction</p>\r\n    </div>\r\n  );\r\n}","export default function Apropos() {\r\n  return (\r\n    <div className=\"Apropos\">\r\n      <h2>À propos de nous</h2>\r\n      <p>Patati et patata</p>\r\n    </div>\r\n  );\r\n}","export default function Contact() {\r\n  return (\r\n    <div className=\"Contact\">\r\n      <h2>Contactez-nous</h2>\r\n      <p>Formulaire de contact à venir</p>\r\n    </div>\r\n  );\r\n}","import './PiedDePage.scss';\r\n\r\n// Nous avons besoin de cette valeur une seule fois dans le cycle de vie de l'appli.\r\n// Donc, on la calcule en dehors du code du composant.\r\nconst annee = new Date().getFullYear();\r\n\r\nexport default function PiedDePage(props) {  \r\n  return (\r\n    <footer className=\"PiedDePage\">\r\n      &copy;{annee} - TIM - Tous droits réservés.\r\n    </footer>\r\n  );\r\n}","import './Appli.scss';\r\nimport Entete from './Entete.jsx';\r\nimport ListeProduits from './ListeProduits';\r\nimport Accueil from './Accueil';\r\nimport Apropos from './Apropos';\r\nimport Contact from './Contact';\r\nimport PiedDePage from './PiedDePage';\r\nimport { useState, useEffect } from 'react';\r\nimport { Switch,Route } from 'react-router-dom';\r\n\r\nexport default function Appli() { \r\n  // État du panier\r\n  const etatPanier = useState(\r\n    () => window.localStorage.getItem('panier-4pa-ex2') ? JSON.parse(window.localStorage.getItem('panier-4pa-ex2')) : {}\r\n  );\r\n  // Variable d'état qui contient le panier\r\n  const [panier] = etatPanier;\r\n  // Sauvegarde du panier dans localStorage (à chaque fois que l'état du panier change)\r\n  useEffect(\r\n    () => window.localStorage.setItem('panier-4pa-ex2', JSON.stringify(panier))\r\n    , [panier]\r\n  );\r\n  return (\r\n    <div className=\"Appli\">\r\n      <Entete etatPanier={etatPanier} />\r\n      <section className=\"contenuPrincipal\">\r\n        {/* Le routeur va s'occuper d'inclure le composant correspondant au chemin (route) requis */}\r\n        <Switch>\r\n          {/* Notez qu'on peut spécifier une route avec un élément vide, en utilisant l'attribut 'component'... */}\r\n          <Route path=\"/\" component={Accueil} exact/>\r\n          {/* ... ou un élément conteneur en spécifiant le composant comme enfant de 'Route'  */}\r\n          <Route path=\"/nos-produits\">\r\n            <ListeProduits etatPanier={etatPanier} exact />\r\n          </Route>\r\n          <Route path=\"/a-propos-de-nous\" exact>\r\n            <Apropos />\r\n          </Route>\r\n          <Route path=\"/contactez-nous\" component={Contact} exact />\r\n        </Switch>\r\n      </section>\r\n      <PiedDePage />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.scss';\r\nimport Appli from './composants/Appli';\r\n\r\n/******* Ex#3 - Étape I ********************************/ \r\n// Ajuster la valeur de la constante suivante pour qu'elle reflète le nom exact de *votre* dépôt GitHub de solution\r\nconst nomDepotGitHub = \"ex2-firestore\";\r\n\r\n\r\n// Ne rien modifier aux lignes suivantes \r\nconst baseName = (window.location.href.search(/github\\.io/) !== -1) ? `/${nomDepotGitHub}` : \"\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={baseName}>\r\n      <Appli />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('racine')\r\n);"],"sourceRoot":""}